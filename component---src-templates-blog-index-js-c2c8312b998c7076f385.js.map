{"version":3,"sources":["webpack:///./src/templates/blog-index.js"],"names":["BlogIndexTemplate","render","langKey","this","props","pageContext","siteTitle","get","posts","location","title","map","node","fields","slug","key","style","fontFamily","fontSize","rhythm","marginBottom","boxShadow","to","rel","formatPostDate","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","React","Component"],"mappings":"oOASMA,E,kGACJC,OAAA,WACE,IAAMC,EAAUC,KAAKC,MAAMC,YAAYH,QACjCI,EAAYC,IAAIJ,KAAM,sCACtBK,EAAQD,IAAIJ,KAAM,sCAExB,OACE,kBAAC,IAAD,CAAQM,SAAUN,KAAKC,MAAMK,SAAUC,MAAOJ,GAC5C,kBAAC,IAAD,MACA,+BACE,kBAAC,IAAD,OAEF,8BACGE,EAAMG,KAAI,YAAa,IAAXC,EAAU,EAAVA,KACLF,EAAQH,IAAIK,EAAM,sBAAwBA,EAAKC,OAAOC,KAC5D,OACE,6BAASC,IAAKH,EAAKC,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,WAAY,yBACZC,SAAUC,YAAO,GACjBC,aAAcD,YAAO,EAAI,KAG3B,kBAAC,OAAD,CACEH,MAAO,CAACK,UAAW,QACnBC,GAAIV,EAAKC,OAAOC,KAChBS,IAAI,YAEHb,IAGL,+BACGc,YAAeZ,EAAKa,YAAYC,KAAMxB,GADzC,MAESyB,YAAkBf,EAAKgB,cAGlC,uBACEC,wBAAyB,CAACC,OAAQlB,EAAKa,YAAYM,kB,GAvCrCC,IAAMC,WAkDvBjC","file":"component---src-templates-blog-index-js-c2c8312b998c7076f385.js","sourcesContent":["import {Link, graphql} from 'gatsby';\nimport get from 'lodash/get';\nimport React from 'react';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport {formatPostDate, formatReadingTime} from '../utils/helpers';\nimport {rhythm} from '../utils/typography';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const langKey = this.props.pageContext.langKey;\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {posts.map(({node}) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3\n                    style={{\n                      fontFamily: 'Montserrat, sans-serif',\n                      fontSize: rhythm(1),\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      style={{boxShadow: 'none'}}\n                      to={node.fields.slug}\n                      rel='bookmark'\n                    >\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>\n                    {formatPostDate(node.frontmatter.date, langKey)}\n                    {` â€¢ ${formatReadingTime(node.timeToRead)}`}\n                  </small>\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{__html: node.frontmatter.spoiler}}\n                />\n              </article>\n            );\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: {fields: {langKey: {eq: $langKey}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}